name: Update Formula

on:
  repository_dispatch:
    types: [cargo-wsdeps-release]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update to (without v prefix)'
        required: true
        default: ''

permissions:
  contents: write
  pull-requests: write

jobs:
  update-formula:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          mkdir -p tmp

      - name: Get latest release info
        id: release_info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            # Get the latest release version from the dispatched event
            VERSION="${{ github.event.client_payload.version }}"
            # If not available, fetch from GitHub API
            if [ -z "$VERSION" ]; then
              VERSION=$(curl -s https://api.github.com/repos/ecliptical/cargo-wsdeps/releases/latest | jq -r .tag_name | sed 's/^v//')
            fi
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download and compute SHA256 for macOS ARM
        run: |
          curl -sL "https://github.com/ecliptical/cargo-wsdeps/releases/download/v${VERSION}/cargo-wsdeps-aarch64-apple-darwin.tar.gz" -o tmp/macos-arm.tar.gz
          MAC_ARM_SHA=$(shasum -a 256 tmp/macos-arm.tar.gz | cut -d ' ' -f 1)
          echo "MAC_ARM_SHA=$MAC_ARM_SHA" >> $GITHUB_ENV

      - name: Download and compute SHA256 for macOS Intel
        run: |
          curl -sL "https://github.com/ecliptical/cargo-wsdeps/releases/download/v${VERSION}/cargo-wsdeps-x86_64-apple-darwin.tar.gz" -o tmp/macos-intel.tar.gz
          MAC_INTEL_SHA=$(shasum -a 256 tmp/macos-intel.tar.gz | cut -d ' ' -f 1)
          echo "MAC_INTEL_SHA=$MAC_INTEL_SHA" >> $GITHUB_ENV

      - name: Download and compute SHA256 for Linux Intel
        run: |
          curl -sL "https://github.com/ecliptical/cargo-wsdeps/releases/download/v${VERSION}/cargo-wsdeps-x86_64-unknown-linux-gnu.tar.gz" -o tmp/linux-intel.tar.gz
          LINUX_INTEL_SHA=$(shasum -a 256 tmp/linux-intel.tar.gz | cut -d ' ' -f 1)
          echo "LINUX_INTEL_SHA=$LINUX_INTEL_SHA" >> $GITHUB_ENV

      - name: Update formula
        run: |
          # This is needed because the sed command above replaces all sha256 occurrences
          # We need to update the file with the correct SHA256 for each platform
          cat > Formula/cargo-wsdeps.rb.new << EOF
          class CargoWsdeps < Formula
            desc "Cargo subcommand for managing workspace dependencies in Rust"
            homepage "https://github.com/ecliptical/cargo-wsdeps"
            version "${VERSION}"
            license "MIT"

            on_macos do
              on_arm do
                url "https://github.com/ecliptical/cargo-wsdeps/releases/download/v#{version}/cargo-wsdeps-aarch64-apple-darwin.tar.gz"
                sha256 "${MAC_ARM_SHA}"
              end
              on_intel do
                url "https://github.com/ecliptical/cargo-wsdeps/releases/download/v#{version}/cargo-wsdeps-x86_64-apple-darwin.tar.gz"
                sha256 "${MAC_INTEL_SHA}"
              end
            end

            on_linux do
              on_intel do
                url "https://github.com/ecliptical/cargo-wsdeps/releases/download/v#{version}/cargo-wsdeps-x86_64-unknown-linux-gnu.tar.gz"
                sha256 "${LINUX_INTEL_SHA}"
              end
            end

            def install
              bin.install "cargo-wsdeps"
            end

            test do
              system "#{bin}/cargo-wsdeps", "--version"
            end
          end
          EOF
          mv Formula/cargo-wsdeps.rb.new Formula/cargo-wsdeps.rb

      - name: Check for changes
        id: git_status
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.git_status.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update formula to v${{ env.VERSION }}"
          title: "Update cargo-wsdeps to v${{ env.VERSION }}"
          body: |
            This PR updates the cargo-wsdeps formula to version ${{ env.VERSION }}.
            
            Changes:
            - Update version to ${{ env.VERSION }}
            - Update SHA256 hashes for all platform binaries
            
            This PR was automatically generated by the update-formula workflow.
          branch: update-cargo-wsdeps-v${{ env.VERSION }}
          base: main
          delete-branch: true
